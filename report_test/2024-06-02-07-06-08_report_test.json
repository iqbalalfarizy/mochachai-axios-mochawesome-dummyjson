{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-02T12:06:06.310Z",
    "end": "2024-06-02T12:06:08.649Z",
    "duration": 2339,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f4000a13-7995-46cc-805b-8ae7555ef52d",
      "title": "",
      "fullFile": "D:\\Prodemy\\Mochachai\\mochachai-tugas 6-all\\tests\\api-dummy-json.spec.js",
      "file": "\\tests\\api-dummy-json.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d9c28061-94e1-43ee-ba9f-534f6da7f092",
          "title": "DUMMY JSON API TESTING",
          "fullFile": "D:\\Prodemy\\Mochachai\\mochachai-tugas 6-all\\tests\\api-dummy-json.spec.js",
          "file": "\\tests\\api-dummy-json.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Dummy JSON Post API Testing",
              "fullTitle": "DUMMY JSON API TESTING Dummy JSON Post API Testing",
              "timedOut": false,
              "duration": 1490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Post\nconst credential = {\n    username: \"emilys\",\n    password: \"emilyspass\"\n}\nconst response = await myInstance.post(\"/auth/login\", credential)\n    const token = response.data.token\n    myInstance.defaults.headers.Authorization = `Bearer ${token}`\n  \n//console.log(response.data)    \n//console.log(myInstance.defaults.headers.Authorization)    \nexpect(response.data).to.be.jsonSchema(schemaPost)",
              "err": {},
              "uuid": "5284fb83-d91c-4211-95a1-c9e878ce2f37",
              "parentUUID": "d9c28061-94e1-43ee-ba9f-534f6da7f092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dummy JSON Get API Testing",
              "fullTitle": "DUMMY JSON API TESTING Dummy JSON Get API Testing",
              "timedOut": false,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get\nconst response = await myInstance.get(\"/user/me\")\n    \nexpect(response.data).to.be.jsonSchema(schemaGet)",
              "err": {},
              "uuid": "9fb7c85d-8145-445b-bf6f-c4dc0e56edd9",
              "parentUUID": "d9c28061-94e1-43ee-ba9f-534f6da7f092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dummy JSON Put API Testing",
              "fullTitle": "DUMMY JSON API TESTING Dummy JSON Put API Testing",
              "timedOut": false,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Put\nconst response = await myInstance.put(\"/users/2\", {\n    firstName : \"Iqbal\"\n    })\n    \nexpect(response.data).to.be.jsonSchema(schemaPut)",
              "err": {},
              "uuid": "e5f6ba2e-e49a-4b4f-ab7c-0ba319476dac",
              "parentUUID": "d9c28061-94e1-43ee-ba9f-534f6da7f092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dummy JSON Delete API Testing",
              "fullTitle": "DUMMY JSON API TESTING Dummy JSON Delete API Testing",
              "timedOut": false,
              "duration": 382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Delete\nconst response = await myInstance.delete(\"/users/2\")\n    \nexpect(response.data).to.be.jsonSchema(schemaDelete)",
              "err": {},
              "uuid": "24d9f3f3-3e8c-4cfa-9135-6ed102ecf9bc",
              "parentUUID": "d9c28061-94e1-43ee-ba9f-534f6da7f092",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5284fb83-d91c-4211-95a1-c9e878ce2f37",
            "9fb7c85d-8145-445b-bf6f-c4dc0e56edd9",
            "e5f6ba2e-e49a-4b4f-ab7c-0ba319476dac",
            "24d9f3f3-3e8c-4cfa-9135-6ed102ecf9bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]_report_test",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report_test",
        "reportFilename": "[datetime]_report_test",
        "timestamp": "yyyy-mm-dd-hh-MM-ss"
      },
      "version": "6.2.0"
    }
  }
}